{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonDetails.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/PageNavLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","classNames","sex","name","PersonDetails","personMother","personFather","isSelected","born","died","PeopleTable","people","selectedPerson","personParent","personParentName","find","map","motherName","fatherName","PeoplePage","React","useState","setPeople","isLoading","setIsLoading","error","setError","useParams","useEffect","catch","finally","length","PageNavLink","text","isActive","Navbar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7b0945a4.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  personMother: Person | undefined;\n  personFather: Person | undefined;\n  isSelected: (person: Person) => boolean;\n};\n\nexport const PersonDetails: FC<Props> = ({\n  person,\n  personMother,\n  personFather,\n  isSelected,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={name}\n      className={classNames({\n        'has-background-warning': isSelected(person),\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{personMother ? <PersonLink person={personMother} /> : '-'}</td>\n      <td>{personFather ? <PersonLink person={personFather} /> : '-'}</td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../types';\nimport { PersonDetails } from './PersonDetails';\n\ntype Props = {\n  people: Person[];\n  selectedPerson: string;\n};\n\nexport const PeopleTable: FC<Props> = ({ people, selectedPerson }) => {\n  const isSelected = (person: Person) => person.slug === selectedPerson;\n\n  const personParent = (personParentName: string | null) => {\n    return people.find((person) => person.name === personParentName);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonDetails\n            key={person.name}\n            person={person}\n            personMother={personParent(person.motherName)}\n            personFather={personParent(person.fatherName)}\n            isSelected={isSelected}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = React.useState<Person[]>([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  const { slug = '' } = useParams();\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && !error && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {!isLoading && people.length && (\n            <PeopleTable people={people} selectedPerson={slug} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={\n      ({ isActive }) => classNames(\n        'navbar-item',\n        {\n          'has-background-grey-lighter': isActive,\n        },\n      )\n    }\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}